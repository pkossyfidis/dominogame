/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domino;

/**
 *
 * @author ΠΑΝΑΓΙΩΤΗΣ ΚΟΣΣΥΦΙΔΗΣ 2928
 * @author ΕΛΕΥΘΕΡΙΟΣ ΔΗΜΗΤΡΙΟΥ 2891
 */
public class Help extends javax.swing.JFrame {

    /**
     * Creates new form Help
     */
    public Help() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Instructions");
        setResizable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(" Solo 1:\nΤα πλακίδια ανακατεύονται με την όψη \nπρος τα κάτω και τοποθετούνται σε σχήμα\nορθογωνίου με διάσταση 4x7 πλακιδίων. Στη\nσυνέχεια ο παίκτης γυρνάει όλα τα πλακίδια,\nέτσι ώστε να τα βλέπει. Ο παίκτης ξεκινά\nνα παίζει το κλασσικό παιχνίδι παίρνοντας\nοποιοδήποτε από τα 4 πλακίδια που\nβρίσκονται δεξιότερα σε κάθε σειρά. Συνεχίζει\nνα παίρνει πλακίδια και να τα τοποθετεί\nστη γραμμή domino που δημιουργείται. Αν\nο παίκτης τοποθετήσει όλα τα πλακίδια,\nκερδίζει.\n\nΟυγγρικό Ντόμινο:\nΤα πλακίδια που απομένουν δε χρησιμοποιούνται στη συνέχεια. Ο παίκτης με το μεγαλύτερο διπλό\nπλακίδιο ξεκινά και συνεχίζει να τοποθετεί πλακίδια, ώσπου να μην μπορεί να τοποθετήσει άλλα.\nΣτη συνέχεια παίζει ο επόμενος. Ο γύρος τελειώνει όταν κανένας παίκτης δε μπορεί να τοποθετήσει\nπλακίδια. Ο παίκτης με τους λιγότερους πόντους στο τέλος του γύρου κερδίζει και τους πόντους των\nπλακιδίων των αντιπάλων. Νικητής είναι αυτός που θα φτάσει πρώτος τους 100 πόντους. \n\nΟλα 7 (cardinal)\nΣε αυτή την παραλλαγή του παιχνιδιού τα πλακίδια πρέπει να τοποθετούνται έτσι ώστε οι δύο\nπλευρές τους που ακουμπούν, να έχουν άθροισμα 7 π.χ. αν μια πλευρά του πλακιδίου είναι 5, τότε το\nπλακίδιο που θα τοποθετηθεί δίπλα του πρέπει στη μία του πλευρά να έχει τον αριθμό 2. Τα διπλά\nλευκά και όλα τα πλακίδια των οποίων το σύνολο των πόντων είναι ο αριθμός 7 π.χ. 3/4, 1/6 είναι σαν\nμπαλαντέρ (Cardinals) και μπορούν πάντα να τοποθετούνται. Παρόλο που ένας παίκτης μπορεί να\nπαίξει, μπορεί επίσης να πάρει ένα πλακίδιο από τη στοίβα. Αντιθέτως εάν ένας παίκτης δεν μπορεί\nνα παίξει, παίρνει ένα-ένα πλακίδιο από τη στοίβα μέχρι να μπορέσει. Ωστόσο 2 πλακίδια πρέπει να\nμένουν πάντα στη στοίβα. Ο γύρος τελειώνει όταν ένας παίκτης τοποθετήσει όλα του τα πλακίδια\nή όταν κανένας παίκτης δεν μπορεί να τοποθετήσει πλακίδια. Ο παίκτης που έχει τους λιγότερους\nπόντους κερδίζει τον γύρο. Παίρνει ως πόντους όλους τους πόντους των αντιπάλων του και από\nαυτούς αφαιρώντας από αυτούς τους πόντους που έχει μαζέψει. Μία παρτίδα τελειώνει όταν ένας\nπαίκτης ξεπεράσει τους 100 πόντους.\n");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Help.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Help.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Help.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Help.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Help().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
